//* =======================================
//* Populating element values from selected data object
//* generated by first request to server.
//* Sections: outcome
//* =======================================

// Initializing Luxon DateTime class for the module
const DT = luxon.DateTime;

export const createOutcomeContent = (list) => {
  const tableBodyContent = [];
  const orderedList = list.sort((record1, record2) =>
    // DT#fromFormat <== Luxon method, "D" token describes mm/dd/yyyy format
    DT.fromFormat(record1.OutcomeDate, "D") >
    DT.fromFormat(record2.OutcomeDate, "D")
      ? -1
      : DT.fromFormat(record1.OutcomeDate, "D") <
        DT.fromFormat(record2.OutcomeDate, "D")
      ? 1
      : 0
  );

  for (const record of orderedList) {
    const { OutcomeDate, FY, AssessmentTitle, COMMENTS, OutcomeDescription } =
      record;
    const row = `
    <tr>
      <td>
        <div class="form-group input-field">
          <input type="text" disabled name="OutcomeDate" value=${OutcomeDate}>
        </div>
      </td>
      <td>
        <div class="form-group input-field">
          <input type="text" disabled name="FY" value=${FY}>
        </div>
      </td>
      <td>
        <div class="form-group input-field">
          <input type="text" disabled name="AssessmentTitle" value=${AssessmentTitle}>
        </div>
      </td>
      <td>
        <div class="form-group input-field">
          <input type="text" disabled name="OutcomeDescription" value=${OutcomeDescription}>
        </div>
      </td>
      <td>
        <div class="form-group input-field">
          <input type="text" disabled name="COMMENTS" value=${COMMENTS}>
        </div>
      </td>
    </tr>
    `;
    tableBodyContent.push(row);
  }
  return tableBodyContent.join("");
};
