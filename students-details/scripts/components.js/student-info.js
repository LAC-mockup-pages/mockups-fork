//* =======================================
//* Populating element values from selected data object
//* generated by first request to server.
//* Sections: Student information, Work eligibility, Gender/Ethnicity
//* =======================================

import { dateFormat, createOptionList, createStaffList } from "../main.js";

// Populating input element values
// Data source: original-data/student-data.js/GetStudent
export const inputValues = (student) => {
  $("form input").each(function () {
    const name = $(this).attr("name");
    const value =
      $(this).attr("type") === "date" && name !== "DateSettled"
        ? dateFormat(student[name])
        : student[name];
    $(this).val(value);
  });
};
// Populating Work Eligibility section select values. Adding option student.
// Data source: original-data/student-data.js/GetStudent,
//        data-server.js/GetStaff
export const ssnValues = (student) => {
  $(".ssn-form select[name='NoSSNVisa']").val(student.NoSSNVisa);
  const optionStaff = createOptionList(
    createStaffList(GetStaff),
    student.NoSSNVisaStaff
  );
  $(".ssn-form select[name='NoSSNVisaStaff']").append(optionStaff);
};
// Populating Gender | Ethnicity section select values.
// Data source: original-data/student-data.js/GetStudent,
//        data-server.js/ddlRace
export const genderValues = (student) => {
  const optionListSex = createOptionList(
    [
      { key: "M", value: "Male" },
      { key: "F", value: "Female" },
      { key: "N", value: "Non-Binary/Gender Non-Conforming" }
    ],
    student.Sex
  );
  const optionListEthnicity = createOptionList(
    [
      { key: "H", value: "Hispanic/Latino/a" },
      { key: "N", value: "Non-Hispanic/Latino/a" }
    ],
    student.EthnicityID
  );
  $(".gender-form select[name='Sex']").append(optionListSex);
  $(".gender-form select[name='EthnicityID']").append(optionListEthnicity);

  // RaceID multiple selects
  const selectedList = student.RaceID.split(",");
  let raceElement = "";
  for (const val of selectedList) {
    const valIndex = selectedList.indexOf(val);
    const labelElement =
      valIndex === 0 ? `<label for="RaceID">Race</label>` : `<label></label>`;
    const selectionList = selectedList.slice(0, valIndex + 1);
    const optionValuesList = ddlRace.filter(
      (obj) => !selectionList.includes(obj.key)
    );
    const optionList = createOptionList(optionValuesList, val);
    raceElement += `
    <div class="input-field form-group">
      ${labelElement}
      <select class="modal-select" name="RaceID" disabled>
        ${optionList}
      </select>
    </div>`;
  }
  $(".race").empty().append(raceElement);
};
