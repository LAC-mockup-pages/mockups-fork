//* =======================================
//* Populating element values from selected data object
//* generated by first request to server.
//* Sections: Employment
//* =======================================

import { createOptionList } from "../main.js";

// Data sources: /original-data/student-data.js/GetEmploymentInfo
//          /original-data/student-data.js/GetEmploymentStatus
//          /original-data/student-data.js/GetIncome
export const employmentValues = (list, statusList, incomeList) => {
  // Sorting records from most recent FY to oldest FY
  const orderedList = list.sort((record1, record2) =>
    record1.EmployStatusFY < record2.EmployStatusFY
      ? -1
      : record1.EmployStatusFY > record2.EmployStatusFY
      ? 1
      : 0
  );
  const tableBodyContent = [];
  for (const record of orderedList) {
    const {
      ID,
      EmployStatID,
      EmployStatusFY,
      EmployerID,
      EmployDate,
      LastEmployDate,
      ReleaseDate,
      IncomeFY
    } = record;
    const optionListStatus = createOptionList(statusList, EmployStatID);
    const optionListIncome = createOptionList(incomeList, IncomeFY);
    const { FiscalYear } = createCredentials();
    const FYList = [];
    for (let i = 0; i < 5; i++) {
      const key = `${Number(FiscalYear) - i}`;
      FYList.push({ key, value: key });
    }
    const optionListFY = createOptionList(FYList, EmployStatusFY);
    const row = `
    <tr id=${ID} data-original-title="Click to Edit" data-toggle="tooltip" data-placement="left" >
      <td>
        <div class="form-field input-group">
          <select class="modal-select" disabled name="EmployStatID">
            ${optionListStatus}
          </select>
        </div>
      </td>
      <td>
        <div class="form-field input-group">
          <select class="modal-select" disabled name="EmployStatusFY">
            ${optionListFY}
          </select>
        </div>
      </td>
      <td>
        <div class="form-field input-group">
          <input type="text" disabled name="EmployerID" value=${EmployerID}>
        </div>
      </td>
      <td>
        <div class="form-field input-group">
          <input type="text" disabled name="EmployDate" value=${EmployDate} >
        </div>
      </td>
      <td>
        <div class="form-field input-group">
          <input type="text" disabled name="LastEmployDate" value=${LastEmployDate} >
        </div>
      </td>
      <td>
        <div class="form-field input-group">
          <input type="text" disabled name="ReleaseDate" value=${ReleaseDate} >
        </div>
      </td>
      <td>
        <div class="form-field input-group">
          <select class="modal-select" disabled name="IncomeFY">
            ${optionListIncome}
          </select>
        </div>
      </td>
    </tr>`;
    tableBodyContent.push(row);
  }
  $(".employment-form tbody").append(tableBodyContent.join(""));
  // Enables customized tooltips
  $("[data-toggle='tooltip']").tooltip();
};

export const addNewEmployment = (statusList, incomeList, valuesObj) => {
  const labels = {
    EmployStatID: "Status",
    EmployStatusFY: "FY",
    EmployerID: "Employer",
    EmployDate: "Employment date",
    LastEmployDate: "Last employ. date",
    ReleaseDate: "Release date",
    IncomeFY: "Annual income"
  };
  const content = [];
  const { FiscalYear } = createCredentials();
  for (const key in labels) {
    const labelText = labels[key];
    let field = "";
    let labelClassVal = "";
    let option = "";
    if (["Status", "Annual income"].includes(labelText)) {
      const selectedValue = valuesObj[key] ? valuesObj[key] : "";
      const hashTable = labelText === "Status" ? statusList : incomeList;
      if (labelText === "Status") {
        labelClassVal = "class='red-text'";
        option = "required";
      }
      // elementSelectModal() <== helpers/helperFunctions.js
      field = elementSelectModal({
        hashTable,
        keyValue: key,
        selectedValue,
        labelVal: labelText,
        labelClassVal,
        option,
        optionText: ""
      });
    } else {
      const value = valuesObj[key]
        ? valuesObj[key]
        : labelText === "FY"
        ? FiscalYear
        : "";
      const option = labelText === "FY" ? "disabled" : "";
      const type = labelText.includes("date") ? "date" : "text";
      // elementInput() <== helpers/helperFunctions.js
      field = elementInput({
        keyVal: key,
        labelVal: labelText,
        value,
        labelClassVal: "",
        classVal: "",
        option,
        optionHidden: "form-group",
        type
      });
    }
    content.push(field);
  }
  return content.join("");
};
