//* =======================================
//* Populating element values from selected data object
//* generated by first request to server.
//* Section: Funding sources
//* =======================================
// Removes the starting characters up to "|" and

import { createOptionList } from "../main.js";

// whitespace immediately after
const truncateString = (str) => {
  const indx = str.indexOf("|") + 2;
  return str.substr(indx).trim();
};
// Data source: original-data/student-data.js/GetFundingInfo
export const fundingValues = (list) => {
  const formContent = [];
  // createCredentials() <== helpers/helperFunctions.jsl
  const { FiscalYear } = createCredentials();
  const FiscalYearRange = [
    FiscalYear,
    `${Number(FiscalYear) + 1}`,
    `${Number(FiscalYear) - 1}`
  ];
  const orderedList = list
    .filter((record) => FiscalYearRange.includes(record.FY))
    .sort((record1, record2) =>
      record1.FY > record2.FY ? -1 : record1.FY < record2.FY ? 1 : 0
    );
  for (const record of orderedList) {
    const { ID, FundAbbrev, FY, FSID } = record;

    const description = `${truncateString(FundAbbrev)} (${FY})`;
    const row = `
  <div id=${ID}>
    <div class="input-field form-group">
      <input type="text" disabled name="FundAbbrev" value="${description}">
    </div>
  </div>
  `;
    formContent.push(row);
  }
  $(".funding-form").append(formContent.join(""));
};

export const addNewFundingSource = (studentData, fundingList) => {
  const filteredList = fundingList
    .filter((record) => {
      const { FSID, FY } = record;
      return !studentData.find((item) => item.FSID === FSID && item.FY === FY);
    })
    .map((item) => {
      const { FSID, FY, FundAbbrev_FY } = item;
      return { key: `${FY}${FSID}`, value: truncateString(FundAbbrev_FY) };
    })
    .sort((record1, record2) =>
      record1.value < record2.value ? -1 : record1.value > record2.value ? 1 : 0
    );
  const optionList = createOptionList(filteredList);
  const content = `
  <div class="input-field form-group">
    <select class="modal-select" name="FYplusFSID">
      ${optionList}
    </select>
  </div>
  `;
  return content;
};

// Editing Funding sources section
export const editFunding = (studentData, fundingList) => {
  const filteredList = fundingList
    .filter((record) => {
      const { FSID, FY } = record;
      return !studentData.find((item) => item.FSID === FSID && item.FY === FY);
    })
    .map((item) => {
      const { FSID, FY, FundAbbrev_FY } = item;
      return { key: `${FY}${FSID}`, value: truncateString(FundAbbrev_FY) };
    })
    .sort((record1, record2) =>
      record1.value < record2.value ? -1 : record1.value > record2.value ? 1 : 0
    );
  const optionList = createOptionList(filteredList);
};
